#+TITLE:  Polymorphisme
#+AUTHOR: Xavier Garrido
#+DATE:   23/09/2013
#+OPTIONS: toc:nil
#+LATEX_HEADER: \setcounter{chapter}{6}

* Classe =Employe=

Créer une classe abstraite =Employe= contenant :

- un nom de type =std::string= [fn:1],
- un prénom de type =std::string=,
- un entier correspondant à l'âge.

On définira également les méthodes suivantes :

- un constructeur,
- un destructeur (virtuel),
- une méthode purement virtuelle =calculer_salaire()=,
- une méthode virtuelle =nom()= qui sera redéfinie dans les classes filles.

[fn:1] la classe =std::string= fait partie de la bibliothèque standard et
facilite la gestion et la manipulation des chaînes de caractères. Pour pouvoir
l'utiliser, il conviendra d'inclure le fichier d'en-tête =<string>=.

* Test de la classe =Employe=

Écrire une fonction prenant en argument une référence vers un objet de classe
=Employe=, et qui utilise les méthodes de cet objet pour afficher le nom de
l'employé ainsi que son salaire.

Utiliser cette fonction pour tester *au fur et à mesure* le bon fonctionnement
des classes dérivées d'=Employe=.

* Branche =Ouvrier=

Créer une classe =Ouvrier= qui hérite d'=Employe=. Cette classe a un membre
de plus qu'=Employe= : un entier qui représente l'ancienneté.

- Définir la méthode =calculer_salaire()= avec une part fixe et une
  augmentation liée à l'ancienneté.
- redéfinir =nom()= en mettant en en-tête « L'ouvrier : » puis le nom.

* Branche =Commercial=

Créer une classe =Commercial= qui hérite d'=Employe=. Cette classe a un membre
de plus qu'=Employe= : un entier qui représente le chiffre d'affaire. Dans la
mesure où elle n'explicite pas la méthode =calculer_salaire()=, la classe
=Commercial= est abstraite.

Créer une classe =Vendeur= dérivant de =Commercial= :

- définir le salaire /via/ la méthode virtuelle =calculer_salaire()=. Par
  exemple, une base fixe plus 20% du chiffre d'affaire,
- redéfinir =nom()= en mettant en en-tête « Le vendeur : » puis le nom.

Créer une classe =Representant= héritant de =Commercial= :

- définir le salaire /via/ la méthode virtuelle =calculer_salaire()=,
- redéfinir =nom()= en mettant en en-tête « Le représentant : » puis le nom.

* Programme principal

Dans le programme principal, déclarer un tableau contenant des pointeurs
d'=Employe=, et le remplir avec des objets des différents types qui ont été
définis.

Itérer sur ce tableau pour afficher les noms et salaires de tous les employés.
